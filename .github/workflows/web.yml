name: Build and Deploy Web Release

on:
  push:
    branches: [ "main" ] # 当 main 分支有 push 时触发
  workflow_dispatch: # 允许手动触发 workflow

jobs:
  build-and-deploy-web:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Flutter 环境
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.24.3

      - name: 获取 Flutter 依赖
        run: flutter pub get

      - name: 创建 secrets.json 文件
        run: |
          echo "${{ secrets.SECRETS_JSON_CONTENT }} | base64 -d" > secrets.json

      - name: 构建 Flutter Web Release
        run: flutter build web --release --dart-define-from-file=secrets.json

      - name: 打包 Web Release 为 ZIP
        run: zip -r web-release.zip build/web

      - name: 上传 Web ZIP Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-release-zip
          path: web-release.zip

      - name: 配置 Git 用户
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: 切换或创建 deploy 分支
        run: |
          if git rev-parse --quiet --verify deploy; then
            echo "Deploy branch exists, checking out..."
            git checkout deploy
          else
            echo "Deploy branch does not exist, creating..."
            git checkout --orphan deploy
          fi

      - name: 清理 deploy 分支
        run: |
          find ./ -mindepth 1 -maxdepth 1 -not -path "./.git" -not -path "./.gitignore" -not -path "./.gitignore" -not -path "./build" -exec rm -rf {} +
          echo "Cleaned deploy branch"

      - name: 复制 build/web 内容到 deploy 分支
        run: cp -r build/web/* .

      - name: 添加所有更改
        run: git add .

      - name: 提交更改
        run: |
          if ! git diff --cached --quiet --exit-code; then
            git commit -m "Deploy web app to deploy branch"
            echo "Changes committed."
          else
            echo "No changes to commit."
          fi

      - name: 推送到 deploy 分支
        run: git push origin deploy --force
