name: Build and Deploy Web Release

on:
  push:
    branches: [ "main" ] # 当 main 分支有 push 时触发
  workflow_dispatch: # 允许手动触发 workflow

permissions:
  contents: write

jobs:
  build-and-deploy-web:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码 (main 分支) # 显式注释，更清晰
        uses: actions/checkout@v4

      - name: 设置 Flutter 环境
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.32.2

      - name: 获取 Flutter 依赖
        run: flutter pub get

      - name: 创建 secrets.json 文件
        run: |
          echo "${{ secrets.SECRETS_JSON_CONTENT }} | base64 -d" > secrets.json

      - name: 构建 Flutter Web Release
        run: flutter build web --release --dart-define-from-file=secrets.json

      - name: 上传 Web Release Artifact # 上传 build/web 目录
        uses: actions/upload-artifact@v4
        with:
          name: web-release-artifact # Artifact 名称
          path: build/web # 上传整个 build/web 目录

      - name: 检出 deploy 分支 # 显式注释，更清晰
        uses: actions/checkout@v4
        with:
          ref: deploy

      - name: 清理 deploy 分支
        run: |
          find . -mindepth 1 -maxdepth 1 -not -path "./.git" -not -path "./.gitignore" -exec rm -rf {} +
          echo "Cleaned deploy branch"

      - name: 下载 Web Release Artifact # 下载之前上传的 build/web
        uses: actions/download-artifact@v4
        with:
          name: web-release-artifact # 和上传 Artifact 的 name 一致
          path: .

      - name: 提交代码到 deploy 分支
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "deploy"
          git push